# Problem 2
#
# Each new term in the Fibonacci sequence is generated by adding the
# previous two terms. 
# By starting with 1 and 2, the first 10 terms will be:
#
#               1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do
# not exceed four million, find the sum of the even-valued terms.
#
#
# Answer = 4613732
#

import timeit

def method():
    """ Returns the sum of all the even fibonacci numbers under 4000000. """

    limit = 4000000
    sum = 0
    previous = 0
    i = 1

    while i < limit:
        t = i
        i += previous
        previous = t

        # Checking if the fibbonacci number is even
        if i%2 == 0:
            sum += i

    return sum

def main():
    """ Main Method """
    print(method())


if __name__ == "__main__":
    main()
